[{"title":"Does Java pass by value or reference?","date":"2018-03-16T18:51:32.000Z","path":"2018/reference-or-value/","text":"Recently when I was looking through the stackoverflow, I found there were some people are confused by the concept whether Java is “pass by reference” or “pass by value” mechanism, and here are some gist I summerized from my experience and the book “Thinking in JAVA”. Let’s look at the following code:1234567891011121314public class Example &#123; String str = new String(\"Hello\"); char[] ch = &#123; 'a', 'b', 'c' &#125;; public static void main(String args[]) &#123; Example e = new Example(); e.change(e.str, e.ch); System.out.println(e.str); System.out.println(e.ch); &#125; public void change(String str, char ch[]) &#123; str = \"World\"; ch[0] = 'd'; &#125; &#125; It’s obvious that the str won’t be changed by the change method, but not for the ch[0], why? Well, first of all, we should know that both the String and char[] are reference type, not primitive data type. Second, Java passes object references by value as well, but what was passed to the method is just a copy of original reference, though the copied reference and origianl reference both point to the same object at first, but later the copied one changes its pointer to another address where stores “World”, it’s somewhat like str = new String(“World”). As for the ch[0], it’s changed by the method because what the line “ch[0] = ‘d’” does is to alter the first charater in the address to ‘d’, and this address isn’t be changed, and still the same with the original address. Is it a little confused? Okay, let me clarify it a bit more by an example. If we add this snippet “ch = {‘a’,’b’,’c’}” before “ch[0] = ‘d’”, then the address is definately changed even though the content is still ‘a’,’b’,’c’. In conclusion, for the primitive data types, Java pass them by value, however, for reference data types (i.e. object types), Java pass them by reference, but it passes object references by value.","categories":[{"name":"Java","slug":"Java","permalink":"http://wilzxl.github.io/categories/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://wilzxl.github.io/tags/Java/"},{"name":"Concept","slug":"Concept","permalink":"http://wilzxl.github.io/tags/Concept/"}]},{"title":"Usage of \"express.static\" in Framework Express","date":"2018-02-09T04:01:49.000Z","path":"2018/usage-express-static/","text":"Express framework is the first choice for most People using nodejs as server. In Express, everyone will use the method:1app.use(express.static(__dirname + '/public')); This code makes root directory + /public as static files directory, also we can write it as:1app.use(express.static(path.join(__dirname, 'public'))); But why could this code snippet help us set the static files directory? what did it do? So let’s start with the static files. Static FilesWe can understand static files as files whose content won’t change for different users. No matter who visit a website, the images, the css style or the frontend javascript in it are the same, we call these files as “static files”. Then, those files responsive to different users with different actions are dynamic files, those could be .jsp files, php files or js files on nodejs server. app.use() And what did app.use() do? Let’s check what the official api says:A route will match any path that follows its path immediately with a “/”. For example: app.use(‘/apple’, …) will match “/apple”, “/apple/images”, “/apple/images/news”, and so on. Since path defaults to “/”, middleware mounted without a path will be executed for every request to the app.For example, this middleware function will be executed for every request to the app: 1234app.use(function (req, res, next) &#123; console.log(‘Time: %d’, Date.now()); next();&#125;); Clearly, it will handle the request from path ‘/‘ as well as paths under it. For example, if we set the path as ‘/apple’, when the requesting paths are ‘/apple’, ‘/apple/images’, ‘/apple/images/news’, all of them will be handled by middleware.More info: Expressjs express.static","categories":[{"name":"WebDev","slug":"WebDev","permalink":"http://wilzxl.github.io/categories/WebDev/"}],"tags":[{"name":"MEANstack","slug":"MEANstack","permalink":"http://wilzxl.github.io/tags/MEANstack/"},{"name":"Framework","slug":"Framework","permalink":"http://wilzxl.github.io/tags/Framework/"}]},{"title":"Test for Markdown Grammer","date":"2018-02-03T05:20:05.000Z","path":"2018/test/","text":"Another way to show images but can’t adjust size Just a test!Table：XMLHttpRequest.readyState constant value mean UNSENT 0 Client has been created. open() not called yet OPENED 1 open() has been called HEADERS_RECEIVED 2 send() has been called, and headers and status are available LOADING 3 Downloading; responseText holds partial data DONE 4 The operation is complete Head 1Head 21$ hexo new \"My New Post\" Link More info: Server citation [quote with author &amp; book]Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake one two one two Coding.net有以下主要功能: 代码托管平台在线运行环境代码质量监控项目管理平台 boldcurve","categories":[{"name":"test","slug":"test","permalink":"http://wilzxl.github.io/categories/test/"}],"tags":[{"name":"test","slug":"test","permalink":"http://wilzxl.github.io/tags/test/"},{"name":"markdown","slug":"markdown","permalink":"http://wilzxl.github.io/tags/markdown/"}]}]