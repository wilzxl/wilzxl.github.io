<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wil&#39;s Cube</title>
  
  <subtitle>Keep calm and carry on programming.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wilzxl.github.io/"/>
  <updated>2018-02-09T06:18:09.533Z</updated>
  <id>http://wilzxl.github.io/</id>
  
  <author>
    <name>W!lZ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Usage of &quot;express.static&quot; in Framework Express</title>
    <link href="http://wilzxl.github.io/2018/usage-express-static/"/>
    <id>http://wilzxl.github.io/2018/usage-express-static/</id>
    <published>2018-02-09T04:01:49.000Z</published>
    <updated>2018-02-09T06:18:09.533Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://expressjs.com/" target="_blank" rel="noopener">Express</a> framework is the first choice for most People using nodejs as server. In Express, everyone will use the method:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.use(express.static(__dirname + <span class="string">'/public'</span>));</span><br></pre></td></tr></table></figure> </p><p>This code makes root directory + /public as static files directory, also we can write it as:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.use(express.static(path.join(__dirname, <span class="string">'public'</span>)));</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>But why could this code snippet help us set the static files directory? what did it do? So let’s start with the <strong>static files</strong>.</p><h2 id="Static-Files"><a href="#Static-Files" class="headerlink" title="Static Files"></a>Static Files</h2><p>We can understand static files as files whose content won’t change for different users. No matter who visit a website, the images, the css style or the frontend javascript in it are the same, we call these files as “static files”.</p><p>  Then, those files responsive to different users with different actions are dynamic files, those could be .jsp files, php files or js files on nodejs server.</p><h2 id="app-use"><a href="#app-use" class="headerlink" title="app.use()"></a>app.use()</h2><p>  And what did app.use() do? Let’s check what the official <a href="http://expressjs.com/en/4x/api.html#app.use" target="_blank" rel="noopener">api</a> says:<br><blockquote><p>A route will match any path that follows its path immediately with a “/”. For example: app.use(‘/apple’, …) will match “/apple”, “/apple/images”, “/apple/images/news”, and so on.</p><p>  Since path defaults to “/”, middleware mounted without a path will be executed for every request to the app.<br>For example, this middleware function will be executed for every request to the app:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">‘Time: %d’</span>, <span class="built_in">Date</span>.now());</span><br><span class="line">  next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></blockquote><br>  Clearly, it will handle the request from path ‘/‘ as well as paths under it. For example, if we set the path as ‘/apple’, when the requesting paths are ‘/apple’, ‘/apple/images’, ‘/apple/images/news’, all of them will be handled by middleware.<br>More info: <a href="http://expressjs.com/en/4x/api.html#express.static" target="_blank" rel="noopener">Expressjs express.static</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Express&lt;/a&gt; framework is the first choice for most People using nodejs as server. In Express, everyone will use the method:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.use(express.static(__dirname + &lt;span class=&quot;string&quot;&gt;&#39;/public&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; &lt;/p&gt;
&lt;p&gt;This code makes root directory + /public as static files directory, also we can write it as:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.use(express.static(path.join(__dirname, &lt;span class=&quot;string&quot;&gt;&#39;public&#39;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="WebDev" scheme="http://wilzxl.github.io/categories/WebDev/"/>
    
    
      <category term="MEANstack" scheme="http://wilzxl.github.io/tags/MEANstack/"/>
    
      <category term="Framework" scheme="http://wilzxl.github.io/tags/Framework/"/>
    
  </entry>
  
  <entry>
    <title>Test for Markdown Grammer</title>
    <link href="http://wilzxl.github.io/2018/test/"/>
    <id>http://wilzxl.github.io/2018/test/</id>
    <published>2018-02-03T05:20:05.000Z</published>
    <updated>2018-02-09T03:51:39.583Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/laptop.jpg" width="600" height="400" title="test"><br><a id="more"></a></p><p>Another way to show images but can’t adjust size<br><img src="/2018/test/img1.jpg" title="This is an example image"></p><p></p><p class="myPara"> Just a test!</p><br>Table：XMLHttpRequest.readyState<p></p><table><thead><tr><th style="text-align:center">constant</th><th style="text-align:center">value</th><th style="text-align:center">mean</th></tr></thead><tbody><tr><td style="text-align:center">UNSENT</td><td style="text-align:center">0</td><td style="text-align:center">Client has been created. open() not called yet</td></tr><tr><td style="text-align:center">OPENED</td><td style="text-align:center">1</td><td style="text-align:center">open() has been called</td></tr><tr><td style="text-align:center">HEADERS_RECEIVED</td><td style="text-align:center">2</td><td style="text-align:center">send() has been called, and headers and status are available</td></tr><tr><td style="text-align:center">LOADING</td><td style="text-align:center">3</td><td style="text-align:center">Downloading; responseText holds partial data</td></tr><tr><td style="text-align:center">DONE</td><td style="text-align:center">4</td><td style="text-align:center">The operation is complete</td></tr></tbody></table><h2 id="Head-1"><a href="#Head-1" class="headerlink" title="Head 1"></a>Head 1</h2><h3 id="Head-2"><a href="#Head-2" class="headerlink" title="Head 2"></a>Head 2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Link</a></p><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><blockquote><p>citation</p></blockquote><blockquote><p>[quote with author &amp; book]Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><ul><li>one</li><li>two</li></ul><ol><li>one</li><li>two</li></ol><ul><li>Coding.net有以下主要功能:<blockquote><p>代码托管平台<br>在线运行环境<br>代码质量监控<br>项目管理平台</p></blockquote></li></ul><p><strong>bold</strong><br><em>curve</em><br><img src="/2018/test/img1.jpg" title="This is an example image"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/laptop.jpg&quot; width=&quot;600&quot; height=&quot;400&quot; title=&quot;test&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="test" scheme="http://wilzxl.github.io/categories/test/"/>
    
    
      <category term="test" scheme="http://wilzxl.github.io/tags/test/"/>
    
      <category term="markdown" scheme="http://wilzxl.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
